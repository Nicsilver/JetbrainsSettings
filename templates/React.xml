<templateSet group="React">
  <template name="rccp" value="import React, { Component } from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;class $componentName$ extends Component {&#10;    render() {&#10;        return (&#10;            &lt;div&gt;&#10;                $END$&#10;            &lt;/div&gt;&#10;        );&#10;    }&#10;}&#10;&#10;$componentName$.propTypes = {&#10;&#10;};&#10;&#10;export default $componentName$;&#10;" description="Creates a React component class with PropTypes and ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="componentName" expression="" defaultValue="&quot;MyComponent&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rcfc" value="import React, { Component } from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;class $componentName$ extends Component {&#10;    constructor(props) {&#10;        super(props);&#10;    }&#10;    &#10;    componentWillMount() {&#10;    &#10;    }&#10;    &#10;    componentDidMount() {&#10;    &#10;    }&#10;    &#10;    componentWillReceiveProps(nextProps) {&#10;    &#10;    }&#10;    &#10;    shouldComponentUpdate(nextProps, nextState) {&#10;    &#10;    }&#10;    &#10;    componentWillUpdate(nextProps, nextState) {&#10;    &#10;    }&#10;    &#10;    componentDidUpdate(prevProps, prevState) {&#10;    &#10;    }&#10;    &#10;    componentWillUnmount() {&#10;    &#10;    }&#10;    &#10;    render() {&#10;        return (&#10;            &lt;div&gt;&#10;                $END$&#10;            &lt;/div&gt;&#10;        );&#10;    }&#10;}&#10;&#10;$componentName$.propTypes = {&#10;&#10;};&#10;&#10;export default $componentName$;&#10;" description="Creates a React component class with PropTypes and all lifecycle methods and ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="componentName" expression="" defaultValue="&quot;MyComponent&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rsc" value="import React from 'react';&#10;&#10;const $componentName$ = () =&gt; {&#10;    return (&#10;        &lt;div&gt;&#10;            $END$&#10;        &lt;/div&gt;&#10;    );&#10;};&#10;&#10;export default $componentName$;&#10;" description="Creates a stateless React component without PropTypes and ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="componentName" expression="" defaultValue="&quot;MyComponent&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="rscp" value="import React from 'react';&#10;import PropTypes from 'prop-types';&#10;&#10;const $componentName$ = props =&gt; {&#10;    return (&#10;        &lt;div&gt;&#10;            &#10;        &lt;/div&gt;&#10;    );&#10;};&#10;&#10;$componentName$.propTypes = {&#10;    $END$&#10;};&#10;&#10;export default $componentName$;&#10;" description="Creates a stateless React component with PropTypes and ES6 module system" toReformat="true" toShortenFQNames="true">
    <variable name="componentName" expression="" defaultValue="&quot;MyComponent&quot;" alwaysStopAt="true" />
    <context />
  </template>
  <template name="con" value="constructor(props) {&#10;    super(props);&#10;    $END$&#10;}&#10;" description="Adds a default constructor for the class that contains props as arguments" toReformat="true" toShortenFQNames="true">
    <context />
  </template>
  <template name="rcc" value="import React, { Component } from 'react';&#10;&#10;class $TM_FILENAME_BASE$ extends Component {&#10; render() {&#10;  return (&#10;   &lt;div&gt;&#10;    $END$&#10;   &lt;/div&gt;&#10;  );&#10; }&#10;}&#10;&#10;export default $TM_FILENAME_BASE$;" description="Creates a A higher-order component" toReformat="true" toShortenFQNames="true">
    <variable name="TM_FILENAME_BASE" expression="capitalize(camelCase(fileNameWithoutExtension()))" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context />
  </template>
</templateSet>